(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{480:function(e,a,t){"use strict";t.r(a);var r=t(2),o=Object(r.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"day-46"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#day-46"}},[e._v("#")]),e._v(" Day 46")]),e._v(" "),t("p",[e._v("Nathan Quam")]),e._v(" "),t("hr"),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/NathanMQuam/C-Sharp-Rock-Paper-Scissors",target:"_blank",rel:"noopener noreferrer"}},[e._v("Rock Paper Scissors"),t("OutboundLink")],1)]),e._v(" "),t("hr"),e._v(" "),t("hr"),e._v(" "),t("h2",{attrs:{id:"daily-journal"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#daily-journal"}},[e._v("#")]),e._v(" Daily Journal")]),e._v(" "),t("p",[e._v("Read Foundations of C# > C# Data Types and answer the following questions")]),e._v(" "),t("ol",[t("li",[e._v("What are the three categories of data types? How are they different?")])]),e._v(" "),t("ul",[t("li",[e._v("Value Type\n"),t("code",[e._v("Value types are variables which directly store a data value. These are usually numbers, or a boolean. Passing a value type from one method into another creates a new copy of that value, which is separate from the original value.")])]),e._v(" "),t("li",[e._v("Reference Type\n"),t("code",[e._v("A reference type variable does not directly store a data value, instead it stores a memory address to a value. These are usually a string, array, class or delegate. Reference types default to null, which means they are not currently storing a reference. When passing a reference type variable to a method passes it's memory location reference, meaning that any changes made to the variable also occurs anywhere that variable in memory is referenced.")])]),e._v(" "),t("li",[e._v("Pointer Type")])]),e._v(" "),t("ol",[t("li",[e._v("What are the Value-type data types? What differences do you notice from JavaScript?")])]),e._v(" "),t("ul",[t("li",[e._v("bool")]),e._v(" "),t("li",[e._v("byte")]),e._v(" "),t("li",[e._v("char")]),e._v(" "),t("li",[e._v("decimal")]),e._v(" "),t("li",[e._v("double")]),e._v(" "),t("li",[e._v("enum")]),e._v(" "),t("li",[e._v("float")]),e._v(" "),t("li",[e._v("int")]),e._v(" "),t("li",[e._v("long")]),e._v(" "),t("li",[e._v("sbyte")]),e._v(" "),t("li",[e._v("short")]),e._v(" "),t("li",[e._v("struct")]),e._v(" "),t("li",[e._v("uint")]),e._v(" "),t("li",[e._v("ulong")]),e._v(" "),t("li",[e._v("ushort")])]),e._v(" "),t("p",[t("code",[e._v('These data types only store a literal data value, and as opposed to JavaScript, the exact type of number must be specified, instead of a general "number" data type.')])]),e._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[e._v("In your own words how do Reference types get stored in memory? How does this differ from Value types?\n"),t("code",[e._v("A reference type variable does not directly store a data value, instead it stores a memory address to a value. While value types only store a literal data value in memory.")])])])])}),[],!1,null,null,null);a.default=o.exports}}]);