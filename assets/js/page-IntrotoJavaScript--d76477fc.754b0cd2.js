(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{498:function(t,e,s){"use strict";s.r(e);var a=s(2),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"intro-to-javascript"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#intro-to-javascript"}},[t._v("#")]),t._v(" Intro to JavaScript")]),t._v(" "),s("p",[s("strong",[t._v("1.")]),t._v(" Which keywords are used to declare a variable in JavaScript?\n"),t._v(" "),s("code",[t._v("Let, Var, and Const")]),t._v(" "),s("strong",[t._v("2.")]),t._v(" What is the definition of a function?\n"),t._v(" "),s("code",[t._v("A function is a block of code held within an object, the function has a set of inputs and returns an output.")])]),t._v(" "),s("p",[s("strong",[t._v("3.")]),t._v(" What are the "),s("code",[t._v("SOLID")]),t._v(" principles?\n"),t._v(" "),s("code",[t._v("***S*** * Single-Responsibility ***O*** * Open-Closed ***L*** * Liskov Substitution ***I*** * Interface Segregation ***D*** * Dependency Inversion")]),t._v(" "),s("strong",[t._v("4.")]),t._v(" Given this array:")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" fruit "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'apple'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'banana'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'pineapple'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'orange'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'strawberry'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("What index is the pineapple's current position? How do you know?\n"),t._v(" "),s("code",[t._v("[2], because arrays are index 0 based, 'apple' is 0, 'banana' is 1, and 'pineapple' is 2")]),t._v(" "),s("strong",[t._v("5.")]),t._v(" With these two objects:")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" you "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"You"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" hair"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" friends"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" them "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Them"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" hair"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" friends"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("how would you .push the "),s("code",[t._v("them")]),t._v(" object into the "),s("code",[t._v("you")]),t._v(" object's array of friends?\n"),t._v(" "),s("code",[t._v("you.friends.push(them)")])]),t._v(" "),s("p",[s("strong",[t._v("6.")]),t._v(" Give an example of a JavaScript "),s("code",[t._v("Conditional")]),t._v(":\n"),t._v(" "),s("code",[t._v('(num1 >= num2) || (str1 == "comparison string")')]),t._v(" "),s("strong",[t._v("7.")]),t._v(" In the "),s("code",[t._v("for loop")]),t._v(' below, what is the name of the piece belongs inside the empty "______" space? What would you put here to increase '),s("code",[t._v("i")]),t._v(" by one on every iteration?")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" _______ "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//...")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),t._v(" "),s("p",[s("code",[t._v("This is the 'Increment Expression,' which is a line of code that is always run after every time the below block of code is run. It is usually used to increment or decrement the 'i' variable.")]),t._v(" "),s("strong",[t._v("8.")]),t._v(" What does the "),s("code",[t._v("DOM")]),t._v(" acronym stand for? Which file is first accessed to render the "),s("code",[t._v("DOM")]),t._v("?\n"),t._v(" "),s("code",[t._v('"Document Object Model"')])]),t._v(" "),s("p",[s("strong",[t._v("9.")]),t._v(" What are the "),s("code",[t._v("9")]),t._v(" ECMAScript types as defined by MDN?\n"),t._v("\n`\nThere are 6 'Primitives':")]),t._v(" "),s("ul",[s("li",[t._v("Undefined")]),t._v(" "),s("li",[t._v("Boolean")]),t._v(" "),s("li",[t._v("Number")]),t._v(" "),s("li",[t._v("String")]),t._v(" "),s("li",[t._v("BigInt")]),t._v(" "),s("li",[t._v("Symbol")])]),t._v(" "),s("p",[t._v("2 'Structural Types':")]),t._v(" "),s("ul",[s("li",[t._v("Object")]),t._v(" "),s("li",[t._v("Function")])]),t._v(" "),s("p",[t._v("and 1 'Structural Root' primitive:")]),t._v(" "),s("ul",[s("li",[t._v("Null\n`")])]),t._v(" "),s("p",[s("strong",[t._v("10.")]),t._v(" When it comes to functions or methods, what is the difference between a "),s("code",[t._v("parameter")]),t._v(" and an "),s("code",[t._v("argument")]),t._v("?\n"),t._v(" "),s("code",[t._v("A 'parameter' is the name of a variable in the function parenthesis() that the function uses. An 'argument' is the actual variable that is passed into a function when it is called/invoked.")])]),t._v(" "),s("p",[s("strong",[t._v("11.")]),t._v(" What is the difference between a "),s("code",[t._v("primitive")]),t._v(" value and a "),s("code",[t._v("reference")]),t._v(" value?\n"),t._v(" "),s("code",[t._v("a 'primitive' value is a simple value assigned to a variable. A 'reference' value is a reference to the complex object, instead of the entire object being the value.")])])])}),[],!1,null,null,null);e.default=n.exports}}]);